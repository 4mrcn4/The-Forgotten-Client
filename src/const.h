/*
  Tibia CLient
  Copyright (C) 2019 Saiyans King

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.
*/

#ifndef __FILE_CONST_h_
#define __FILE_CONST_h_

#include "defines.h"

#define CLIENT_OVVERIDE_VERSION 0
#if CLIENT_OVVERIDE_VERSION > 0
#define CLIENT_OVVERIDE_PROTOCOL_VERSION 860
#define CLIENT_OVVERIDE_FILE_VERSION 1220
#define CLIENT_OVVERIDE_LOGIN_HOST "127.0.0.1"
#define CLIENT_OVVERIDE_LOGIN_PORT 7171
//#define __ALPHA_SPRITES__
#endif

const char CLIENT_ASSET_PIC[] = "Tibia.pic";
const char CLIENT_ASSET_DAT[] = "Tibia.dat";
const char CLIENT_ASSET_SPR[] = "Tibia.spr";
const char CLIENT_ASSET_CATALOG[] = "catalog-content.json";

const char PRODUCT_NAME[] = "The Forgotten Client";
const char CONFIG_CATALOG[] = "TheForgottenClient";
const char AUTOMAP_CATALOG[] = "Automap";
const char ASSETS_CATALOG[] = "Assets";
const char CLIENT_RSA_KEY[] = "109120132967399429278860960508995541528237502902798129123468757937266291492576446330739696001110603907230888610072655818825358503429057592827629436413108566029093628212635953836686562675849720620786279431090218017681061521755056710823876476444260558147179707119674283982419152118103759076030616683978566631413";

//Hardcoded GUI Internal IDs
const Uint32 CLIENT_GUI_ENTER_TRIGGER = 2000;
const Uint32 CLIENT_GUI_ESCAPE_TRIGGER = 2001;
const Uint32 CLIENT_GUI_TAB_START = 3000;
const Uint32 CLIENT_GUI_TAB_END = 3500;

//Custom client trigger event
const Sint32 CLIENT_EVENT_UPDATETHINK = 0;
const Sint32 CLIENT_EVENT_TAKESCREENSHOT = 1;
const Sint32 CLIENT_EVENT_SAFEEVENTHANDLER = 2;
const Sint32 CLIENT_EVENT_UPDATEPANELS = 3;
const Sint32 CLIENT_EVENT_RESIZEPANEL = 4;

//Screenshoot control variables
const Uint32 SCREENSHOT_FLAG_SAVEASBMP = 1;

//Fonts control variables
const Sint32 CLIENT_FONT_ALIGN_LEFT = 0;
const Sint32 CLIENT_FONT_ALIGN_RIGHT = 1;
const Sint32 CLIENT_FONT_ALIGN_CENTER = 2;

const Uint8 CLIENT_FONT_NONOUTLINED = 0;
const Uint8 CLIENT_FONT_OUTLINED = 1;
const Uint8 CLIENT_FONT_SMALL = 2;
const Uint8 CLIENT_FONT_LAST = 3;

//Graphics Engines ids
const Uint8 CLIENT_ENGINE_SOFTWARE = 0;
const Uint8 CLIENT_ENGINE_OPENGL = 1;
const Uint8 CLIENT_ENGINE_DIRECT3D = 2;
const Uint8 CLIENT_ENGINE_DIRECT3D7 = 3;
const Uint8 CLIENT_ENGINE_DIRECT3D11 = 4;
const Uint8 CLIENT_ENGINE_VULKAN = 5;
const Uint8 CLIENT_ENGINE_OPENGLES = 6;
const Uint8 CLIENT_ENGINE_OPENGLES2 = 7;

//Cursors control variables
const Sint32 CLIENT_CURSOR_ARROW = 0;
const Sint32 CLIENT_CURSOR_CROSSHAIR = 1;
const Sint32 CLIENT_CURSOR_RESIZENS = 2;
const Sint32 CLIENT_CURSOR_RESIZEWE = 3;
const Sint32 CLIENT_CURSOR_LAST = 4;

//Antialiasing control variables
const Uint8 CLIENT_ANTIALIASING_NONE = 0;
const Uint8 CLIENT_ANTIALIASING_NORMAL = 1;
const Uint8 CLIENT_ANTIALIASING_INTEGER = 2;

//Effects control variables
const Uint32 EFFECT_TICKS_PER_FRAME = 100;
const Uint32 EFFECT_MAX_INGAME_EFFECTS = 100;
const Sint32 EFFECT_MAX_CACHED_ANIMATIONS = 10;

//DistanceEffects control variables
const Uint32 DISTANCEEFFECT_MAX_INGAME_DISTANCEEFFECTS = 100;

//Items control variables
const Uint32 ITEM_TICKS_PER_FRAME = 500;
const Sint32 ITEM_MAX_CACHED_ANIMATIONS = 8;

//Creatures control variables
const Uint32 CREATURE_TICKS_PER_FRAME = 300;
const Uint32 CREATURE_ANIMATION_DELAY_RESET = 1000;
const Uint32 CREATURE_SHIELD_BLINK_TICKS = 300;

//Animatedtexts control variables
const Uint32 ANIMATEDTEXT_STAY_TIME = 1000;

//Statictexts control variables
const Uint32 STATICTEXT_PER_CHAR_STAY_DURATION = 60;
const Uint32 STATICTEXT_MINIMUM_STAY_DURATION = 3000;

#define GAME_PANEL_MINIMUM_HEIGHT 57
#define GAME_MINIMUM_WIDTH 640
#define GAME_MINIMUM_HEIGHT 480
#define GAME_MAP_WIDTH 18
#define GAME_MAP_HEIGHT 14
#define GAME_MAP_FLOORS 15
#define GAME_MAP_AWARERANGE 2
#define GAME_PLAYER_FLOOR 7
#define RENDERTARGET_WIDTH ((GAME_MAP_WIDTH-3)*32)
#define RENDERTARGET_HEIGHT ((GAME_MAP_HEIGHT-3)*32)

//The difference between hardware and software is that the first use videocard memory and second system memory
//The circular buffer use bitwise operation instead of modulo which means the size should be power of 2
#define HARDWARE_MAX_SPRITEMASKS 16384 //16384*32*32*4 ~ 64MB
#define HARDWARE_MAX_AUTOMAPTILES 32 //32*256*256*4 ~ 8MB
#define SOFTWARE_MAX_SPRITEMASKS 16384 //16384*32*32*4 ~ 64MB
#define SOFTWARE_MAX_AUTOMAPTILES 32 //32*256*256*4 ~ 8MB
#define VULKAN_INFLIGHT_FRAMES 2

#ifdef HAVE_CXX11_SUPPORT
enum ContextMenu_Styles : Uint8
#else
enum ContextMenu_Styles
#endif
{
	CONTEXTMENU_STYLE_STANDARD = (1 << 0),
	CONTEXTMENU_STYLE_SEPARATED = (1 << 1),
	CONTEXTMENU_STYLE_CHECKED = (1 << 2),
	CONTEXTMENU_STYLE_UNCHECKED = (1 << 3)
};

#ifdef HAVE_CXX11_SUPPORT
enum Slots : Uint8
#else
enum Slots
#endif
{
	SLOT_HEAD = 0,
	SLOT_NECKLACE = 1,
	SLOT_BACKPACK = 2,
	SLOT_ARMOR = 3,
	SLOT_RIGHT = 4,
	SLOT_LEFT = 5,
	SLOT_LEGS = 6,
	SLOT_FEET = 7,
	SLOT_RING = 8,
	SLOT_AMMO = 9,
	SLOT_LAST = 10
};

#ifdef HAVE_CXX11_SUPPORT
enum Direction : Uint8
#else
enum Direction
#endif
{
	DIRECTION_NORTH = 0,
	DIRECTION_EAST = 1,
	DIRECTION_SOUTH = 2,
	DIRECTION_WEST = 3,

	DIRECTION_DIAGONAL_MASK = 4,
	DIRECTION_SOUTHWEST = DIRECTION_DIAGONAL_MASK | 0,
	DIRECTION_SOUTHEAST = DIRECTION_DIAGONAL_MASK | 1,
	DIRECTION_NORTHWEST = DIRECTION_DIAGONAL_MASK | 2,
	DIRECTION_NORTHEAST = DIRECTION_DIAGONAL_MASK | 3,

	DIRECTION_LAST = 8,
	DIRECTION_INVALID = 8
};

#ifdef HAVE_CXX11_SUPPORT
enum PathFind : Sint32
#else
enum PathFind
#endif
{
	PathFind_ReturnSuccessfull = 0,
	PathFind_ReturnSamePosition = 1,
	PathFind_ReturnImpossible = 2,
	PathFind_ReturnTooFar = 3
};

#ifdef HAVE_CXX11_SUPPORT
enum PathFindFlags : Uint32
#else
enum PathFindFlags
#endif
{
	PathFindFlags_AllowCreatures = (1 << 0),
	PathFindFlags_AllowNonWalkable = (1 << 1),
	PathFindFlags_AllowUnseenTiles = (1 << 2),
	PathFindFlags_AllowNonPathable = (1 << 3)
};

enum Skills
{
	Skills_Fist = 0,
	Skills_Club = 1,
	Skills_Sword = 2,
	Skills_Axe = 3,
	Skills_Distance = 4,
	Skills_Shielding = 5,
	Skills_Fishing = 6,
	Skills_CriticalChance = 7,
	Skills_CriticalDamage = 8,
	Skills_LifeLeechChance = 9,
	Skills_LifeLeechAmount = 10,
	Skills_ManaLeechChance = 11,
	Skills_ManaLeechAmount = 12,
	Skills_LastSkill = 7,
	Skills_LastAdditionalSkill = 13
};

#ifdef HAVE_CXX11_SUPPORT
enum Icons : Uint32
#else
enum Icons
#endif
{
	ICON_POISON = (1 << 0),
	ICON_BURN = (1 << 1),
	ICON_ENERGY = (1 << 2),
	ICON_DRUNK = (1 << 3),
	ICON_MANASHIELD = (1 << 4),
	ICON_PARALYZE = (1 << 5),
	ICON_HASTE = (1 << 6),
	ICON_SWORDS = (1 << 7),
	ICON_DROWNING = (1 << 8),
	ICON_FREEZING = (1 << 9),
	ICON_DAZZLED = (1 << 10),
	ICON_CURSED = (1 << 11),
	ICON_PARTY_BUFF = (1 << 12),
	ICON_REDSWORDS = (1 << 13),
	ICON_PIGEON = (1 << 14),
	ICON_BLEEDING = (1 << 15)
};

#ifdef HAVE_CXX11_SUPPORT
enum Skulls : Uint8
#else
enum Skulls
#endif
{
	SKULL_NONE = 0,
	SKULL_YELLOW = 1,
	SKULL_GREEN = 2,
	SKULL_WHITE = 3,
	SKULL_RED = 4,
	SKULL_BLACK = 5,
	SKULL_ORANGE = 6
};

#ifdef HAVE_CXX11_SUPPORT
enum PartyShields : Uint8
#else
enum PartyShields
#endif
{
	SHIELD_NONE = 0,
	SHIELD_WHITEYELLOW = 1,
	SHIELD_WHITEBLUE = 2,
	SHIELD_BLUE = 3,
	SHIELD_YELLOW = 4,
	SHIELD_BLUE_SHAREDEXP = 5,
	SHIELD_YELLOW_SHAREDEXP = 6,
	SHIELD_BLUE_NOSHAREDEXP_BLINK = 7,
	SHIELD_YELLOW_NOSHAREDEXP_BLINK = 8,
	SHIELD_BLUE_NOSHAREDEXP = 9,
	SHIELD_YELLOW_NOSHAREDEXP = 10,
	SHIELD_GRAY = 11
};

#ifdef HAVE_CXX11_SUPPORT
enum GuildEmblems : Uint8
#else
enum GuildEmblems
#endif
{
	GUILDEMBLEM_NONE = 0,
	GUILDEMBLEM_ALLY = 1,
	GUILDEMBLEM_ENEMY = 2,
	GUILDEMBLEM_NEUTRAL = 3,
	GUILDEMBLEM_MEMBER = 4,
	GUILDEMBLEM_OTHER = 5
};

#ifdef HAVE_CXX11_SUPPORT
enum CreatureTypes : Uint8
#else
enum CreatureTypes
#endif
{
	CREATURETYPE_PLAYER = 0,
	CREATURETYPE_MONSTER = 1,
	CREATURETYPE_NPC = 2,
	CREATURETYPE_SUMMON_OWN = 3,
	CREATURETYPE_SUMMON_OTHERS = 4
};

#ifdef HAVE_CXX11_SUPPORT
enum CreatureIcons : Uint8
#else
enum CreatureIcons
#endif
{
	CREATUREICON_NONE = 0,
	CREATUREICON_SPEECH = 1,
	CREATUREICON_TRADE = 2,
	CREATUREICON_QUEST = 3,
	CREATUREICON_QUESTTRADER = 4
};

enum FluidsColor
{
	FluidTransparent = 0,
	FluidBlue = 1,
	FluidRed = 2,
	FluidBrown = 3,
	FluidGreen = 4,
	FluidYellow = 5,
	FluidWhite = 6,
	FluidPurple = 7
};

enum FluidsType
{
	FluidNone = 0,
	FluidWater = 1,
	FluidMana = 2,
	FluidBeer = 3,
	FluidOil = 4,
	FluidBlood = 5,
	FluidSlime = 6,
	FluidMud = 7,
	FluidLemonade = 8,
	FluidMilk = 9,
	FluidWine = 10,
	FluidHealth = 11,
	FluidUrine = 12,
	FluidRum = 13,
	FluidFruidJuice = 14,
	FluidCoconutMilk = 15,
	FluidTea = 16,
	FluidMead = 17
};

#ifdef HAVE_CXX11_SUPPORT
enum DeathType : Uint8
#else
enum DeathType
#endif
{
	DeathType_Regular = 0,
	DeathType_Blessed = 1
};

#ifdef HAVE_CXX11_SUPPORT
enum MessageMode : Uint8
#else
enum MessageMode
#endif
{
	MessageNone = 0,
	MessageSay,
	MessageWhisper,
	MessageYell,
	MessagePrivateFrom,
	MessagePrivateTo,
	MessageChannelManagement,
	MessageChannel,
	MessageChannelHighlight,
	MessageSpell,
	MessageNpcFrom,
	MessageNpcTo,
	MessageGamemasterBroadcast,
	MessageGamemasterChannel,
	MessageGamemasterPrivateFrom,
	MessageGamemasterPrivateTo,
	MessageLogin,
	MessageWarning,
	MessageGame,
	MessageFailure,
	MessageLook,
	MessageDamageDealed,
	MessageDamageReceived,
	MessageHeal,
	MessageExp,
	MessageDamageOthers,
	MessageHealOthers,
	MessageExpOthers,
	MessageStatus,
	MessageLoot,
	MessageTradeNpc,
	MessageGuild,
	MessagePartyManagement,
	MessageParty,
	MessageBarkLow,
	MessageBarkLoud,
	MessageReport,
	MessageHotkeyUse,
	MessageTutorialHint,
	MessageThankyou,
	MessageMarket,
	MessageMana,
	MessageBeyondLast,
	MessageMonsterYell,
	MessageMonsterSay,
	MessageRed,
	MessageBlue,
	MessageRVRChannel,
	MessageRVRAnswer,
	MessageRVRContinue,
	MessageGameHighlight,
	MessageNpcFromStartBlock,
	MessageInvalid = 0xFF
};

#ifdef HAVE_CXX11_SUPPORT
enum AttackMode : Uint8
#else
enum AttackMode
#endif
{
	ATTACKMODE_ATTACK = 1,
	ATTACKMODE_BALANCED = 2,
	ATTACKMODE_DEFENSE = 3
};

#ifdef HAVE_CXX11_SUPPORT
enum ChaseMode : Uint8
#else
enum ChaseMode
#endif
{
	CHASEMODE_STAND = 0,
	CHASEMODE_FOLLOW = 1
};

#ifdef HAVE_CXX11_SUPPORT
enum SecureMode : Uint8
#else
enum SecureMode
#endif
{
	SECUREMODE_SECURE = 0,
	SECUREMODE_UNSECURE = 1
};

#ifdef HAVE_CXX11_SUPPORT
enum PvPMode : Uint8
#else
enum PvPMode
#endif
{
	PVPMODE_DOVE = 0,
	PVPMODE_WHITE_HAND = 1,
	PVPMODE_YELLOW_HAND = 2,
	PVPMODE_RED_FIST = 3
};

#ifdef HAVE_CXX11_SUPPORT
enum MarketAction : Uint8
#else
enum MarketAction
#endif
{
	MARKETACTION_BUY = 0,
	MARKETACTION_SELL = 1
};

#ifdef HAVE_CXX11_SUPPORT
enum MarketRequest : Uint16
#else
enum MarketRequest
#endif
{
	MARKETREQUEST_OWN_OFFERS = 0xFFFE,
	MARKETREQUEST_OWN_HISTORY = 0xFFFF
};

#ifdef HAVE_CXX11_SUPPORT
enum MarketOfferState : Uint8
#else
enum MarketOfferState
#endif
{
	OFFERSTATE_ACTIVE = 0,
	OFFERSTATE_CANCELLED = 1,
	OFFERSTATE_EXPIRED = 2,
	OFFERSTATE_ACCEPTED = 3,

	OFFERSTATE_ACCEPTEDEX = 255
};

#ifdef HAVE_CXX11_SUPPORT
enum CyclopediaCharacterInfoType : Uint8
#else
enum CyclopediaCharacterInfoType
#endif
{
	CHARACTERINFO_BASEINFORMATION = 0,
	CHARACTERINFO_GENERALSTATS = 1,
	CHARACTERINFO_COMBATSTATS = 2,
	CHARACTERINFO_RECENTDEATHS = 3,
	CHARACTERINFO_RECENTPVPKILLS = 4,
	CHARACTERINFO_ACHIEVEMENTS = 5,
	CHARACTERINFO_ITEMSUMMARY = 6,
	CHARACTERINFO_OUTFITSMOUNTS = 7,
	CHARACTERINFO_STORESUMMARY = 8,
	CHARACTERINFO_INSPECTION = 9,
	CHARACTERINFO_BADGES = 10,
	CHARACTERINFO_TITLES = 11
};

#ifdef HAVE_CXX11_SUPPORT
enum FeatureEventType : Uint8
#else
enum FeatureEventType
#endif
{
	FEATUREVENT_CYCLOPEDIA_ITEMS = 1,
	FEATUREVENT_CYCLOPEDIA_CHARACTERINFO = 2,
	FEATUREVENT_CYCLOPEDIA_GENERALSTATS = 3,
	FEATUREVENT_CYCLOPEDIA_COMBATSTATS = 4,
	FEATUREVENT_CYCLOPEDIA_RECENTDEATHS = 5,
	FEATUREVENT_CYCLOPEDIA_RECENTPVPKILLS = 6,
	FEATUREVENT_CYCLOPEDIA_ACHIEVEMENTS = 7,
	FEATUREVENT_CYCLOPEDIA_ITEMSUMMARY = 8,
	FEATUREVENT_CYCLOPEDIA_OUTFITSMOUNTS = 9,
	FEATUREVENT_CYCLOPEDIA_STORESUMMARY = 10
};

#ifdef HAVE_CXX11_SUPPORT
enum InspectPlayerState : Uint8
#else
enum InspectPlayerState
#endif
{
	PLAYERSTATE_GRANTPERMISSION = 1,
	PLAYERSTATE_ASKTOINSPECT = 2,
	PLAYERSTATE_ALLOWTOINSPECT = 3,
	PLAYERSTATE_INSPECTPERMISSION = 4,
	PLAYERSTATE_REVOKEPERMISSION = 5,
	PLAYERSTATE_ALLOWALLTOINSPECT = 6,
	PLAYERSTATE_REVOKEALLTOINSPECT = 7
};

#ifdef HAVE_CXX11_SUPPORT
enum PreyAction : Uint8
#else
enum PreyAction
#endif
{
	PREYACTION_LISTREROLL = 0,
	PREYACTION_BONUSREROLL = 1,
	PREYACTION_SELECTPREY = 2,
	PREYACTION_UNKNOWN3 = 3,
	PREYACTION_UNKNOWN4 = 4,
	PREYACTION_UNKNOWN5 = 5
};

#ifdef HAVE_CXX11_SUPPORT
enum CyclopediaBonusEffectAction : Uint8
#else
enum CyclopediaBonusEffectAction
#endif
{
	CYCLOPEDIA_BONUSEFFECT_UNLOCK = 0,
	CYCLOPEDIA_BONUSEFFECT_SELECT = 1,
	CYCLOPEDIA_BONUSEFFECT_CLEAR = 2
};

#ifdef HAVE_CXX11_SUPPORT
enum InspectObjectTypes : Uint8
#else
enum InspectObjectTypes
#endif
{
	INSPECT_NORMALOBJECT = 0,
	INSPECT_NPCTRADE = 1,
	INSPECT_UNKNOWN = 2,
	INSPECT_CYCLOPEDIA = 3
};

#ifdef HAVE_CXX11_SUPPORT
enum LootContainerAction : Uint8
#else
enum LootContainerAction
#endif
{
	LOOTACTION_ASSIGNCONTAINER = 0,
	LOOTACTION_CLEARCONTAINER = 1,
	LOOTACTION_UNKNOWN = 2,
	LOOTACTION_SETUSEFALLBACK = 3,
};

#ifdef HAVE_CXX11_SUPPORT
enum QuickLootFilter : Uint8
#else
enum QuickLootFilter
#endif
{
	QUICKLOOT_FILTER_SKIPPEDLOOT = 0,
	QUICKLOOT_FILTER_ACCEPTEDLOOT = 1
};

#ifdef HAVE_CXX11_SUPPORT
enum StoreProductTypes : Uint8
#else
enum StoreProductTypes
#endif
{
	ProductTypeOther = 0,
	ProductTypeNameChange = 1
};

#ifdef HAVE_CXX11_SUPPORT
enum AccountStatus : Uint8
#else
enum AccountStatus
#endif
{
	AccountStatus_Ok = 0,
	AccountStatus_Frozen = 1,
	AccountStatus_Suspended = 2
};

#ifdef HAVE_CXX11_SUPPORT
enum SubscriptionStatus : Uint8
#else
enum SubscriptionStatus
#endif
{
	SubscriptionStatus_Free = 0,
	SubscriptionStatus_Premium = 1
};

#ifdef HAVE_CXX11_SUPPORT
enum BugReportCategory : Uint8
#else
enum BugReportCategory
#endif
{
	BUG_CATEGORY_MAP = 0,
	BUG_CATEGORY_TYPO = 1,
	BUG_CATEGORY_TECHNICAL = 2
};

#ifdef HAVE_CXX11_SUPPORT
enum MagicEffects : Uint8
#else
enum MagicEffects
#endif
{
	MAGIC_EFFECTS_END_LOOP = 0,
	MAGIC_EFFECTS_DELTA = 1,
	MAGIC_EFFECTS_DELAY = 2,
	MAGIC_EFFECTS_CREATE_EFFECT = 3,
	MAGIC_EFFECTS_CREATE_DISTANCEEFFECT = 4,
	MAGIC_EFFECTS_CREATE_DISTANCEEFFECT_REVERSED = 5
};

enum SortMethods
{
	Sort_Ascending_Time = 0,
	Sort_Descending_Time = 1,
	Sort_Ascending_Distance = 2,
	Sort_Descending_Distance = 3,
	Sort_Ascending_HP = 4,
	Sort_Descending_HP = 5,
	Sort_Ascending_Name = 6,
	Sort_Descending_Name = 7
};

enum OnscreenMessages
{
	ONSCREEN_MESSAGE_BOTTOM,
	ONSCREEN_MESSAGE_CENTER_LOW,
	ONSCREEN_MESSAGE_CENTER_HIGH,
	ONSCREEN_MESSAGE_TOP,
	ONSCREEN_MESSAGE_LAST
};

#ifdef HAVE_CXX11_SUPPORT
enum ClientActions : Uint8
#else
enum ClientActions
#endif
{
	CLIENT_ACTION_FROMPOSITION = 0,
	CLIENT_ACTION_TOPOSITION = 1,

	CLIENT_ACTION_NONE = 0,
	CLIENT_ACTION_LEFTMOUSE = 1,
	CLIENT_ACTION_RIGHTMOUSE = 2,
	CLIENT_ACTION_EXTRAMOUSE = 3,
	CLIENT_ACTION_MOVEITEM = 4,
	CLIENT_ACTION_USEWITH = 5,
	CLIENT_ACTION_SEARCHHOTKEY = 6,
	CLIENT_ACTION_LENSHELP = 7,
};

enum ClientHotkeyKeys
{
	CLIENT_HOTKEY_FIRST_KEY,
	CLIENT_HOTKEY_SECOND_KEY,
};

enum ClientHotkeyActions
{
	CLIENT_HOTKEY_ACTION_NONE,
	CLIENT_HOTKEY_ACTION_TEXT,
	CLIENT_HOTKEY_ACTION_USEITEM,
	CLIENT_HOTKEY_ACTION_USEONYOURSELF,
	CLIENT_HOTKEY_ACTION_USEONTARGET,
	CLIENT_HOTKEY_ACTION_WITHCROSSHAIRS,
	CLIENT_HOTKEY_ACTION_EQUIP,
};

enum ClientHotkeys
{
	CLIENT_HOTKEY_MOVEMENT_GOEAST,
	CLIENT_HOTKEY_MOVEMENT_GONORTH,
	CLIENT_HOTKEY_MOVEMENT_GONORTHEAST,
	CLIENT_HOTKEY_MOVEMENT_GONORTHWEST,
	CLIENT_HOTKEY_MOVEMENT_GOSOUTH,
	CLIENT_HOTKEY_MOVEMENT_GOSOUTHEAST,
	CLIENT_HOTKEY_MOVEMENT_GOSOUTHWEST,
	CLIENT_HOTKEY_MOVEMENT_GOWEST,
	CLIENT_HOTKEY_MOVEMENT_TURNEAST,
	CLIENT_HOTKEY_MOVEMENT_TURNNORTH,
	CLIENT_HOTKEY_MOVEMENT_TURNSOUTH,
	CLIENT_HOTKEY_MOVEMENT_TURNWEST,
	CLIENT_HOTKEY_MOVEMENT_MOUNT,
	CLIENT_HOTKEY_MOVEMENT_STOPACTIONS,
	CLIENT_HOTKEY_DIALOGS_OPENBUGREPORTS,
	CLIENT_HOTKEY_DIALOGS_OPENIGNORELIST,
	CLIENT_HOTKEY_DIALOGS_OPENOPTIONS,
	CLIENT_HOTKEY_DIALOGS_OPENHOTKEYS,
	CLIENT_HOTKEY_DIALOGS_OPENQUESTLOG,
	CLIENT_HOTKEY_DIALOGS_OPENTERMINAL,
	CLIENT_HOTKEY_WINDOWS_OPENVIPWINDOW,
	CLIENT_HOTKEY_WINDOWS_OPENBATTLEWINDOW,
	CLIENT_HOTKEY_WINDOWS_OPENSKILLSWINDOW,
	CLIENT_HOTKEY_CHAT_CLOSECHANNEL,
	CLIENT_HOTKEY_CHAT_NEXTCHANNEL,
	CLIENT_HOTKEY_CHAT_OPENCHANNELLIST,
	CLIENT_HOTKEY_CHAT_OPENHELPCHANNEL,
	CLIENT_HOTKEY_CHAT_OPENNPCCHANNEL,
	CLIENT_HOTKEY_CHAT_PREVIOUSCHANNEL,
	CLIENT_HOTKEY_CHAT_DEFAULTCHANNEL,
	CLIENT_HOTKEY_CHAT_TOGGLECHAT,
	CLIENT_HOTKEY_MINIMAP_CENTER,
	CLIENT_HOTKEY_MINIMAP_FLOORDOWN,
	CLIENT_HOTKEY_MINIMAP_FLOORUP,
	CLIENT_HOTKEY_MINIMAP_SCROLLEAST,
	CLIENT_HOTKEY_MINIMAP_SCROLLNORTH,
	CLIENT_HOTKEY_MINIMAP_SCROLLSOUTH,
	CLIENT_HOTKEY_MINIMAP_SCROLLWEST,
	CLIENT_HOTKEY_MINIMAP_ZOOMIN,
	CLIENT_HOTKEY_MINIMAP_ZOOMOUT,
	CLIENT_HOTKEY_UI_TOGGLECREATUREINFO,
	CLIENT_HOTKEY_UI_TOGGLEFPSINDICATOR,
	CLIENT_HOTKEY_UI_TOGGLEFULLSCREEN,
	CLIENT_HOTKEY_COMBAT_SETOFFENSIVE,
	CLIENT_HOTKEY_COMBAT_SETBALANCED,
	CLIENT_HOTKEY_COMBAT_SETDEFENSIVE,
	CLIENT_HOTKEY_COMBAT_TOGGLECHASEMODE,
	CLIENT_HOTKEY_COMBAT_TOGGLESECUREMODE,
	CLIENT_HOTKEY_PVPMODE_SETDOVE,
	CLIENT_HOTKEY_PVPMODE_SETREDFIST,
	CLIENT_HOTKEY_PVPMODE_SETWHITEHAND,
	CLIENT_HOTKEY_PVPMODE_SETYELLOWHAND,
	CLIENT_HOTKEY_MISC_LENSHELP,
	CLIENT_HOTKEY_MISC_CHANGECHARACTER,
	CLIENT_HOTKEY_MISC_CHANGEOUTFIT,
	CLIENT_HOTKEY_MISC_LOGOUT,
	CLIENT_HOTKEY_MISC_NEXTPRESET,
	CLIENT_HOTKEY_MISC_PREVIOUSPRESET,
	CLIENT_HOTKEY_MISC_TAKESCREENSHOT,
	CLIENT_HOTKEY_ACTION,
	CLIENT_HOTKEY_LAST
};

enum GameFeatures
{
	//7.70+
	GAME_FEATURE_FIRST = 0,
	GAME_FEATURE_XTEA = GAME_FEATURE_FIRST,
	GAME_FEATURE_RSA1024,
	GAME_FEATURE_MESSAGE_STATEMENT,
	GAME_FEATURE_LOOKTYPE_U16,
	//7.80+
	GAME_FEATURE_NEWFLUIDS,
	GAME_FEATURE_MESSAGE_LEVEL,
	GAME_FEATURE_PLAYERICONS_U16,
	GAME_FEATURE_ADDONS,
	GAME_FEATURE_STAMINA,
	GAME_FEATURE_NEWOUTFITS,
	//7.90+
	GAME_FEATURE_WRITABLE_DATE,
	//8.00+
	GAME_FEATURE_NPC_INTERFACE,
	//8.30+
	GAME_FEATURE_CHECKSUM,
	GAME_FEATURE_ACCOUNT_NAME,
	//8.40+
	GAME_FEATURE_SERVER_SENDFIRST,
	GAME_FEATURE_DOUBLE_CAPACITY,
	//8.50+
	GAME_FEATURE_CREATURE_EMBLEM,
	//8.60+
	GAME_FEATURE_ATTACK_SEQUENCE,
	GAME_FEATURE_LONGER_DIAGONAL,
	GAME_FEATURE_DEATH_PENALTY,
	//8.70+
	GAME_FEATURE_MOUNTS,
	GAME_FEATURE_DOUBLE_EXPERIENCE,
	GAME_FEATURE_SPELL_LIST,
	//9.10+
	GAME_FEATURE_TOTAL_CAPACITY,
	GAME_FEATURE_BASE_SKILLS,
	GAME_FEATURE_CHAT_PLAYERLIST,
	GAME_FEATURE_REGENERATION_TIME,
	GAME_FEATURE_ITEM_ANIMATION_PHASES,
	GAME_FEATURE_ENVIRONMENT_EFFECTS,
	GAME_FEATURE_NPC_NAME_ON_TRADE,
	//9.40+
	GAME_FEATURE_MARKET,
	//9.50+
	GAME_FEATURE_PING,
	GAME_FEATURE_PURSE_SLOT,
	//9.60+
	GAME_FEATURE_OFFLINE_TRAINING,
	GAME_FEATURE_EXTENDED_SPRITES,
	GAME_FEATURE_ADDITIONAL_VIPINFO,
	//9.80+
	GAME_FEATURE_PREVIEW_STATE,
	GAME_FEATURE_CLIENT_VERSION,
	GAME_FEATURE_LOGIN_PENDING,
	GAME_FEATURE_VIP_STATUS,
	GAME_FEATURE_NEWSPEED_LAW,
	GAME_FEATURE_BROWSEFIELD,
	GAME_FEATURE_CONTAINER_PAGINATION,
	//10.00+
	GAME_FEATURE_PVP_MODE,
	GAME_FEATURE_ITEM_MARK,
	GAME_FEATURE_CREATURE_MARK,
	GAME_FEATURE_CREATURE_TYPE,
	//10.30+
	GAME_FEATURE_DOUBLE_SKILLS,
	GAME_FEATURE_CREATURE_ICONS,
	GAME_FEATURE_HIDE_NPC_NAMES,
	GAME_FEATURE_PREMIUM_EXPIRATION,
	//10.50+
	GAME_FEATURE_ENHANCED_ANIMATIONS,
	GAME_FEATURE_UNJUSTIFIED_POINTS,
	GAME_FEATURE_EXPERIENCE_BONUS,
	GAME_FEATURE_DEATH_TYPE,
	GAME_FEATURE_FRAMEGROUPS,
	//10.60+
	GAME_FEATURE_RENDER_INFORMATION,
	//10.70+
	GAME_FEATURE_CONTENT_REVISION,
	GAME_FEATURE_AUTHENTICATOR,
	GAME_FEATURE_SESSIONKEY,
	GAME_FEATURE_EQUIP_HOTKEY,
	//10.80+
	GAME_FEATURE_STORE,
	//10.90+
	GAME_FEATURE_WRAPPABLE,
	GAME_FEATURE_STORE_INBOX,
	GAME_FEATURE_STORE_SERVICETYPE,
	GAME_FEATURE_STORE_HIGHLIGHTS,
	GAME_FEATURE_ADDITIONAL_SKILLS,
	GAME_FEATURE_DETAILED_EXPERIENCE_BONUS,
	GAME_FEATURE_STORE_HIGHLIGHTS2,
	//11.00+
	GAME_FEATURE_NEWFILES_STRUCTURE,
	GAME_FEATURE_CLIENT_SENDSERVERNAME,
	GAME_FEATURE_PREY,
	GAME_FEATURE_IMBUING,
	//11.10+
	GAME_FEATURE_VIP_GROUPS,
	GAME_FEATURE_INSPECTION,
	GAME_FEATURE_PROTOCOLSEQUENCE,
	//11.20+
	GAME_FEATURE_BLESS_DIALOG,
	GAME_FEATURE_QUEST_TRACKER,
	//11.30+
	GAME_FEATURE_COMPEDIUM,
	//11.40+
	GAME_FEATURE_PLAYERICONS_U32,
	GAME_FEATURE_REWARD_WALL,
	GAME_FEATURE_ANALYTICS,
	//11.50+
	GAME_FEATURE_QUICK_LOOT,
	GAME_FEATURE_EXTENDED_CAPACITY,
	GAME_FEATURE_CYCLOPEDIA_MONSTERS,
	//11.80+
	GAME_FEATURE_STASH,
	GAME_FEATURE_CYCLOPEDIA_MAPANDDETAILS,
	//12.00+
	GAME_FEATURE_DOUBLE_PERCENT_SKILLS,
	//12.10+
	GAME_FEATURE_TOURNAMENTS,
	//12.20+
	GAME_FEATURE_ACCOUNT_EMAIL,
	//Custom
	GAME_FEATURE_ITEMS_U16,
	GAME_FEATURE_EFFECTS_U16,
	GAME_FEATURE_DISTANCEEFFECTS_U16,
	GAME_FEATURE_DOUBLE_SHOPBUYAMOUNT,
	GAME_FEATURE_DOUBLE_SHOPSELLAMOUNT,
	GAME_FEATURE_DOUBLE_HEALTH,
	GAME_FEATURE_MINIMAP_REMOVEMARK,
	//End Features
	GAME_FEATURE_LAST
};

#endif /* __FILE_CONST_h_ */
